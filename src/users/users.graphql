type User {
  id: Int!
  username: String!
  password: String!
}

input Filter {
  id: [Int!]
  username: String
  password: String
}

input Pagination {
  offset: Int
  limit: Int
}

type UserIndex {
  items: [User!]!
  total: Int!
}

type Query {
  user(id: Int!): User
  users(filter: Filter, pagination: Pagination): UserIndex!
}

input UserInputCreate {
  username: String!
  password: String!
}

input UserInputUpdate {
  id: Int!
  username: String
  password: String
}

type Mutation {
  userCreate(dto: UserInputCreate): User
  userUpdate(dto: UserInputUpdate): User
}
